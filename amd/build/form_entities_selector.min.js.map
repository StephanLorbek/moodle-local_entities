{"version":3,"file":"form_entities_selector.min.js","sources":["../src/form_entities_selector.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Provides the required functionality for an autocomplete element to select a user.\r\n *\r\n * @module      local_entities/form_entities_selector\r\n * @copyright   2022 Thomas Winkler\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Ajax from \"core/ajax\";\r\nimport {render as renderTemplate} from \"core/templates\";\r\n\r\n/**\r\n * Load the list of users matching the query and render the selector labels for them.\r\n *\r\n * @param {String} selector The selector of the auto complete element.\r\n * @param {String} query The query string.\r\n * @param {Function} callback A callback function receiving an array of results.\r\n * @param {Function} failure A function to call in case of failure, receiving the error message.\r\n */\r\nexport async function transport(selector, query, callback, failure) {\r\n  const request = {\r\n    methodname: \"local_entities_search_entities\",\r\n    args: {\r\n      query: query,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await Ajax.call([request])[0];\r\n\r\n    let labels = [];\r\n    response.list.forEach((entity) => {\r\n      labels.push(\r\n        renderTemplate(\r\n          \"local_entities/form-entities-selector-suggestion\",\r\n          entity\r\n        )\r\n      );\r\n    });\r\n    labels = await Promise.all(labels);\r\n\r\n    response.list.forEach((entity, index) => {\r\n      entity.label = labels[index];\r\n    });\r\n\r\n    callback(response.list);\r\n  } catch (e) {\r\n    failure(e);\r\n  }\r\n}\r\n\r\n/**\r\n * Process the results for auto complete elements.\r\n *\r\n * @param {String} selector The selector of the auto complete element.\r\n * @param {Array} results An array or results returned by {@see transport()}.\r\n * @return {Array} New array of the selector options.\r\n */\r\nexport function processResults(selector, results) {\r\n  if (!Array.isArray(results)) {\r\n    return results;\r\n  } else {\r\n    return results.map((result) => ({value: result.id, label: result.label}));\r\n  }\r\n}\r\n"],"names":["selector","results","Array","isArray","map","result","value","id","label","query","callback","failure","request","methodname","args","response","Ajax","call","labels","list","forEach","entity","push","Promise","all","index","e"],"mappings":";;;;;;;8FAyE+BA,SAAUC,gBAClCC,MAAMC,QAAQF,SAGVA,QAAQG,KAAKC,UAAaC,MAAOD,OAAOE,GAAIC,MAAOH,OAAOG,UAF1DP,2CAzCqBD,SAAUS,MAAOC,SAAUC,eACnDC,QAAU,CACdC,WAAY,iCACZC,KAAM,CACJL,MAAOA,kBAKHM,eAAiBC,cAAKC,KAAK,CAACL,UAAU,OAExCM,OAAS,GACbH,SAASI,KAAKC,SAASC,SACrBH,OAAOI,MACL,qBACE,mDACAD,YAINH,aAAeK,QAAQC,IAAIN,QAE3BH,SAASI,KAAKC,SAAQ,CAACC,OAAQI,SAC7BJ,OAAOb,MAAQU,OAAOO,UAGxBf,SAASK,SAASI,MAClB,MAAOO,GACPf,QAAQe"}