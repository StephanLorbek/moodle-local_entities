{"version":3,"file":"dynamiceditform.min.js","sources":["../src/dynamiceditform.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_\n * @author     Thomas Winkler\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Dynamic dynamicchangesemesterform.\n *\n * @module     rk_manager/dynamicoptinform\n * @copyright  2022 Wunderbyte GmbH\n * @author     Thomas Winkler\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n import DynamicForm from 'core_form/dynamicform';\n\n export const init = (selector, formClass) => {\n\n    // eslint-disable-next-line no-console\n    console.log(selector, formClass);\n    const formContainer = document.querySelector(selector);\n    const editform = new DynamicForm(formContainer, formClass);\n\n    formContainer.addEventListener('change', (e) => {\n        if (!e.target.name) {\n            return;\n        }\n        if (e.target.name == 'cfitemid') {\n            window.skipClientValidation = true;\n            let button = document.querySelector('[name=\"btn_cfcategoryid\"]');\n            editform.processNoSubmitButton(button);\n        }\n    });\n    editform.addEventListener(editform.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n        window.location.href = e.detail.returnurl;\n    });\n\n    // Cancel button does not make much sense in such forms but since it's there we'll just reload.\n    editform.addEventListener(editform.events.FORM_CANCELLED, (e) => {\n        e.preventDefault();\n        // eslint-disable-next-line promise/catch-or-return\n        editform.notifyResetFormChanges()\n            .then(() => editform.load());\n    });\n };\n"],"names":["selector","formClass","console","log","formContainer","document","querySelector","editform","DynamicForm","addEventListener","e","target","name","window","skipClientValidation","button","processNoSubmitButton","events","FORM_SUBMITTED","preventDefault","location","href","detail","returnurl","FORM_CANCELLED","notifyResetFormChanges","then","load"],"mappings":";;;;;;;;;;;;;;kKAgCqB,CAACA,SAAUC,aAG5BC,QAAQC,IAAIH,SAAUC,iBAChBG,cAAgBC,SAASC,cAAcN,UACvCO,SAAW,IAAIC,qBAAYJ,cAAeH,WAEhDG,cAAcK,iBAAiB,UAAWC,OACjCA,EAAEC,OAAOC,MAGO,YAAjBF,EAAEC,OAAOC,KAAoB,CAC7BC,OAAOC,sBAAuB,MAC1BC,OAASV,SAASC,cAAc,6BACpCC,SAASS,sBAAsBD,YAGvCR,SAASE,iBAAiBF,SAASU,OAAOC,gBAAiBR,IACvDA,EAAES,iBACFN,OAAOO,SAASC,KAAOX,EAAEY,OAAOC,aAIpChB,SAASE,iBAAiBF,SAASU,OAAOO,gBAAiBd,IACvDA,EAAES,iBAEFZ,SAASkB,yBACJC,MAAK,IAAMnB,SAASoB"}